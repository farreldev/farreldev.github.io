{"version":3,"sources":["components/Autocomplete/index.js","config.js","container/Home/index.js","container/Pagelist/index.js","container/Detail/index.js","App.js","serviceWorker.js","index.js"],"names":["Autocomplete","listAutocomplete","useState","suggestion","setSuggestion","hidding","setHidding","filterList","filter","list","area","toLowerCase","indexOf","className","to","width","height","viewBox","fill","xmlns","d","onClick","document","querySelector","value","onKeyDown","onChange","e","target","onTxtChange","type","placeholder","map","item","i","key","Home","state","locations","textInput","urlAPI","config","fetch","data","json","result","this","setState","Component","Pagelist","datalists","formatter","Intl","NumberFormat","style","currency","ls","id","src","photo","alt","name","speciality","format","rate","slice","Detail","details","props","match","params","console","log","experience","recomendation","schedule","description","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cfacad3c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Autocomplete({listAutocomplete}) {\r\n  const [suggestion, setSuggestion] = useState('');\r\n  const [hidding, setHidding] = useState(true);\r\n  \r\n  const onTxtChange = (e) => {\r\n    const value = e.target.value;\r\n    setSuggestion(value)\r\n  }\r\n\r\n  const resetBtn = () => {\r\n    document.querySelector('input').value = '';\r\n    setSuggestion('');\r\n    setHidding(true);\r\n  }\r\n\r\n  const getValue = (e) => {\r\n    document.querySelector('input').value = e;\r\n    setSuggestion(e)\r\n    setHidding(true);\r\n  }\r\n\r\n  let filterList = listAutocomplete.filter(list => {\r\n    return list.area.toLowerCase().indexOf(suggestion.toLowerCase()) !== -1;\r\n  })\r\n\r\n  return (\r\n    <div className=\"boxSearch\">\r\n      <h1>Find Our Doctor</h1>\r\n      <div className=\"groupBoxSearch\">\r\n        <div className=\"groupAutocomplete\">\r\n          <Link to='/pagelist' className=\"btnSearch\">\r\n            <svg width=\"25\" height=\"25\" viewBox=\"0 0 36 36\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n              <path d=\"M27.1651 23.3485C28.8226 20.9475 29.7953 18.0367 29.7953 14.8977C29.7953 6.67005 23.1267 0 14.8977 0C6.66865 0 0 6.66998 0 14.8976C0 23.1252 6.66865 29.7953 14.8977 29.7953C18.3324 29.7953 21.493 28.6301 24.0128 26.6778L32.7588 35.4238L36 32.1831L27.1651 23.3485ZM14.8977 26.5866C8.45234 26.5866 3.20871 21.3431 3.20871 14.8976C3.20871 8.45226 8.4522 3.20864 14.8977 3.20864C21.3431 3.20864 26.5866 8.45212 26.5866 14.8976C26.5866 21.3431 21.343 26.5866 14.8977 26.5866Z\" fill=\"white\"/>\r\n              <path d=\"M13.4815 5.72888C9.76356 6.79693 6.84271 9.71778 5.77417 13.4358L7.97762 14.0679C8.82383 11.1144 11.1602 8.77763 14.1136 7.93142L13.4815 5.72888Z\" fill=\"white\"/>\r\n              </svg>\r\n            {/* <button className=\"btnSearch\">\r\n            </button> */}\r\n          </Link>\r\n          <div className=\"autocomplete\">\r\n            { suggestion === '' ? '' : <span className=\"reset\" onClick={resetBtn}></span> }\r\n            <input\r\n              onKeyDown={() => setHidding(false)}\r\n              onChange={(e) => onTxtChange(e)} \r\n              type=\"text\"\r\n              placeholder=\"Type the area - ex: Depok\"/>\r\n          </div>\r\n        </div>\r\n          { !hidding && <ul className=\"autocompleteList\">\r\n              {\r\n                filterList.map((item, i) => {\r\n                  return <li onClick={() => getValue(item.area)} key={i}><span>{item.area}</span></li>\r\n                })\r\n              }\r\n            </ul> \r\n          }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Autocomplete;","export default {\r\n   // url: 'http://52.76.85.10/test/',\r\n   url: 'https://www.mocky.io/v2/5e705e363000006a007a2e1d'\r\n}","import React, { Component } from 'react';\r\nimport Autocomplete from '../../components/Autocomplete';\r\nimport './home.scss';\r\nimport config from '../../config.js';\r\n\r\nclass Home extends Component {\r\n\r\n   state = {\r\n      locations: [],\r\n      textInput: '',\r\n   }\r\n\r\n   async componentDidMount() {\r\n      const urlAPI = config.url,\r\n            data   = await fetch(urlAPI),\r\n            result = await data.json()\r\n            \r\n      this.setState({\r\n         locations: result.locations\r\n      })\r\n   }\r\n\r\n   render() {\r\n      const { locations } = this.state\r\n      return (\r\n         <div className=\"home\">\r\n            <Autocomplete listAutocomplete={ locations }/>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport './pagelist.scss';\r\nimport config from '../../config.js';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Pagelist extends Component {\r\n\r\n   state = {\r\n      datalists: []\r\n   }\r\n\r\n   async componentDidMount() {\r\n      const urlAPI = config.url,\r\n            data   = await fetch(urlAPI),\r\n            result = await data.json()        \r\n      this.setState({\r\n         datalists: result.datalists\r\n      })\r\n   }\r\n\r\n   \r\n\r\n   render() {\r\n      const formatter = new Intl.NumberFormat('id-ID', {\r\n         style: 'currency',\r\n         currency: 'IDR',\r\n      });\r\n      const { datalists } =  this.state;\r\n      return (\r\n         <div className=\"pagelist\">\r\n            <div className=\"pagelistHeader\">\r\n               <h4>Search Page List</h4>\r\n            </div>\r\n            <div className=\"pagelistBody\">\r\n               <div className=\"stickList\">\r\n                  {\r\n                     datalists.map((ls, id) => {\r\n                        return (\r\n                           <div className=\"stick\" key={id}>\r\n                              <div className=\"left\">\r\n                                 <Link to={`/detail/${id}`}>\r\n                                    <figure>\r\n                                       <img src={ls.photo} alt={ls.name}/>\r\n                                    </figure>\r\n                                 </Link>\r\n                                 <div className=\"infoName\">\r\n                                    <strong><Link to={`/detail/${id}`}>{ls.name}</Link></strong>\r\n                                    <ul>\r\n                                       <li>\r\n                                          <small>{ls.speciality}</small>\r\n                                       </li>\r\n                                       <li>\r\n                                          <svg width=\"15\" height=\"16\" viewBox=\"0 0 16 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                             <path d=\"M12 0C10.5273 0 9.33333 1.17235 9.33333 2.61538C9.33333 4.35788 11.6667 6.73854 11.6667 9.13358H12.3333C12.334 6.73854 14.6667 4.42654 14.6667 2.61538C14.6667 1.17235 13.4727 0 12 0ZM12 1.26715C12.1806 1.26724 12.3594 1.30221 12.5263 1.37008C12.6931 1.43795 12.8447 1.53738 12.9723 1.6627C13.1 1.78801 13.2012 1.93676 13.2702 2.10045C13.3393 2.26413 13.3748 2.43955 13.3747 2.61669C13.3746 2.79383 13.3389 2.96922 13.2697 3.13284C13.2005 3.29646 13.0991 3.44511 12.9714 3.57031C12.8436 3.6955 12.6919 3.79479 12.525 3.8625C12.3581 3.9302 12.1793 3.96501 11.9987 3.96492C11.6338 3.96475 11.284 3.82243 11.0261 3.56929C10.7683 3.31614 10.6235 2.97289 10.6237 2.61506C10.6238 2.25722 10.7689 1.91412 11.0271 1.66121C11.2852 1.40831 11.6352 1.26633 12 1.2665V1.26715ZM8 1.30769C3.58867 1.30769 0 4.82735 0 9.15385C0 13.4803 3.58867 17 8 17C12.4113 17 16 13.4803 16 9.15385C16 7.83962 15.668 6.60646 15.0833 5.5165C14.9947 5.68912 14.9053 5.85323 14.8127 6.02781C14.6373 6.35996 14.4527 6.69538 14.2913 7.02885C14.458 7.49635 14.5727 7.99065 14.6247 8.5H13.75C13.702 8.71904 13.6667 8.925 13.6667 9.13358V9.80769H14.6253C14.5349 10.7295 14.2434 11.6214 13.7707 12.4231H11.8133C11.96 11.8098 12.0447 11.1317 12.1047 10.4413H10.7913C10.7292 11.1103 10.611 11.7731 10.438 12.4231H5.562C5.33669 11.5673 5.20396 10.6907 5.166 9.80769H10.3327V9.13358C10.3275 8.92011 10.2996 8.70776 10.2493 8.5H5.16667C5.20463 7.61698 5.33736 6.74035 5.56267 5.88462H9.12533C8.89409 5.45635 8.6784 5.02018 8.47867 4.57692H6.02067C6.572 3.34312 7.30067 2.61538 8 2.61538C8 2.16096 8.08333 1.734 8.22933 1.32796C8.15267 1.32535 8.07733 1.30769 8 1.30769ZM5.25 3.20777C4.9845 3.64265 4.7613 4.10105 4.58333 4.57692H3.25C3.82506 4.00369 4.50309 3.53953 5.25 3.20777ZM2.22933 5.88462H4.18667C3.98503 6.74355 3.86651 7.61922 3.83267 8.5H1.37467C1.46482 7.57814 1.75631 6.68613 2.22933 5.88462V5.88462ZM1.37467 9.80769H3.83333C3.87267 10.7394 3.99533 11.6188 4.18733 12.4231H2.22933C1.75689 11.6213 1.46543 10.7294 1.37467 9.80769ZM3.25 13.7308H4.58333C4.77533 14.2382 5 14.6939 5.25 15.0999C4.50309 14.7682 3.82506 14.304 3.25 13.7308V13.7308ZM6.02067 13.7308H9.97933C9.428 14.9646 8.69933 15.6923 8 15.6923C7.30067 15.6923 6.57133 14.9646 6.02067 13.7308ZM11.4167 13.7308H12.75C12.1749 14.304 11.4969 14.7682 10.75 15.0999C11 14.6945 11.2247 14.2388 11.4167 13.7308Z\" fill=\"#707783\"/>\r\n                                          </svg>\r\n                                          {ls.area}\r\n                                       </li>\r\n                                    </ul>\r\n                                 </div>\r\n                              </div>\r\n                              <div className=\"center\"></div>\r\n                              <div className=\"right\">\r\n                                 <div className=\"infoRate\">\r\n                                    <small>Rate</small>\r\n                                    <strong>{formatter.format(ls.rate).slice(0,-3)}</strong>\r\n                                 </div>\r\n                              </div>\r\n                           </div>\r\n                        )\r\n                     })\r\n                  }\r\n               </div>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Pagelist;","import React, { Component } from 'react';\r\nimport './detail.scss';\r\n// import config from '../../config.js';\r\n\r\nclass Detail extends Component {\r\n   state = {\r\n      details: []\r\n   }\r\n\r\n   async componentDidMount() {\r\n      const urlAPI = await `http://52.76.85.10/test/profile/${this.props.match.params.id}.json`,\r\n            data   = await fetch(urlAPI),\r\n            result = await data.json();\r\n\r\n      this.setState({\r\n         details: result\r\n      })\r\n   }\r\n   \r\n\r\n   render() {\r\n      const { details } = this.state;\r\n      // const { match } = this.props;\r\n      // const formatter = new Intl.NumberFormat('id-ID', {\r\n      //    style: 'currency',\r\n      //    currency: 'IDR',\r\n      // });\r\n      // const { details } =  this.state;\r\n      console.log(details)\r\n      return (\r\n         <div className=\"detail\">\r\n            <div className=\"detailHeader\">\r\n               <h4>Detail Profile</h4>\r\n            </div>\r\n            <div className=\"detailBody\">\r\n               <div className=\"panelBoxDetail\">\r\n                  <div className=\"top\">\r\n                     <figure>\r\n                        {/* <img src=\"https://i.pravatar.cc\" alt=\"images\"/> */}\r\n                        <img src={details.photo} alt={details.name}/>\r\n                     </figure>\r\n                     <div className=\"fieldDetail\">\r\n                        <div className=\"left\">\r\n                           <ul>\r\n                              <li>\r\n                                 <small>Name</small>\r\n                                 <strong>{details.name}</strong>\r\n                              </li>\r\n                              <li>\r\n                                 <small>Speciality</small>\r\n                                 <strong>{details.speciality}</strong>\r\n                              </li>\r\n                              <li>\r\n                                 <small>Rate</small>\r\n                                 <strong>{details.rate}</strong>\r\n                              </li>\r\n                           </ul>\r\n                        </div>\r\n                        <div className=\"right\">\r\n                           <ul>\r\n                              <li>\r\n                                 <small>Experience</small>\r\n                                 <strong>{details.experience}</strong>\r\n                              </li>\r\n                              <li>\r\n                                 <small>Recommendation</small>\r\n                                 <strong>{details.recomendation}\r\n                                    <svg width=\"17\" height=\"16\" viewBox=\"0 0 17 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                       <path d=\"M15.3 5.05263H10.5298L11.4843 2.21726C11.656 1.70526 11.5693 1.13768 11.2506 0.69979C10.9318 0.261895 10.415 0 9.8702 0H8.5C8.24755 0 8.0087 0.111158 7.84635 0.303158L3.85135 5.05263H1.7C0.76245 5.05263 0 5.808 0 6.73684V14.3158C0 15.2446 0.76245 16 1.7 16H13.0109C13.3568 15.9989 13.6942 15.8938 13.9784 15.6986C14.2627 15.5034 14.4805 15.2274 14.603 14.9069L16.9464 8.71663C16.982 8.62208 17.0002 8.52196 17 8.42105V6.73684C17 5.808 16.2375 5.05263 15.3 5.05263ZM1.7 6.73684H3.4V14.3158H1.7V6.73684ZM15.3 8.26863L13.0109 14.3158H5.1V6.19958L8.8978 1.68421H9.8719L8.5442 5.62779C8.5011 5.75437 8.48908 5.88931 8.50913 6.02141C8.52918 6.15352 8.58074 6.27898 8.65951 6.3874C8.73829 6.49583 8.84202 6.58408 8.9621 6.64485C9.08218 6.70562 9.21516 6.73716 9.35 6.73684H15.3V8.26863Z\" fill=\"#A7ADB8\"/>\r\n                                       </svg>\r\n                                 </strong>\r\n                              </li>\r\n                              <li>\r\n                                 <small>Schedule</small>\r\n                                 <strong>{details.schedule}</strong>\r\n                              </li>\r\n                           </ul>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n                  <div className=\"description\">\r\n                     <strong>Description</strong>\r\n                     <p>{details.description}</p>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Detail;","import React, { Component } from 'react';\nimport './App.scss';\nimport Home from './container/Home';\nimport Pagelist from './container/Pagelist';\nimport Detail from './container/Detail';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/pagelist\" component={Pagelist} />\n            <Route path=\"/detail/:id\" component={Detail} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}